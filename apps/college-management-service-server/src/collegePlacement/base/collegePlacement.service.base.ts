/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CollegePlacement as PrismaCollegePlacement,
} from "@prisma/client";

export class CollegePlacementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CollegePlacementCountArgs, "select">
  ): Promise<number> {
    return this.prisma.collegePlacement.count(args);
  }

  async collegePlacements(
    args: Prisma.CollegePlacementFindManyArgs
  ): Promise<PrismaCollegePlacement[]> {
    return this.prisma.collegePlacement.findMany(args);
  }
  async collegePlacement(
    args: Prisma.CollegePlacementFindUniqueArgs
  ): Promise<PrismaCollegePlacement | null> {
    return this.prisma.collegePlacement.findUnique(args);
  }
  async createCollegePlacement(
    args: Prisma.CollegePlacementCreateArgs
  ): Promise<PrismaCollegePlacement> {
    return this.prisma.collegePlacement.create(args);
  }
  async updateCollegePlacement(
    args: Prisma.CollegePlacementUpdateArgs
  ): Promise<PrismaCollegePlacement> {
    return this.prisma.collegePlacement.update(args);
  }
  async deleteCollegePlacement(
    args: Prisma.CollegePlacementDeleteArgs
  ): Promise<PrismaCollegePlacement> {
    return this.prisma.collegePlacement.delete(args);
  }
}
