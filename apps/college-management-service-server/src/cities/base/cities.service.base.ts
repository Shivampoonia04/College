/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cities as PrismaCities } from "@prisma/client";

export class CitiesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CitiesCountArgs, "select">): Promise<number> {
    return this.prisma.cities.count(args);
  }

  async citiesItems(args: Prisma.CitiesFindManyArgs): Promise<PrismaCities[]> {
    return this.prisma.cities.findMany(args);
  }
  async cities(
    args: Prisma.CitiesFindUniqueArgs
  ): Promise<PrismaCities | null> {
    return this.prisma.cities.findUnique(args);
  }
  async createCities(args: Prisma.CitiesCreateArgs): Promise<PrismaCities> {
    return this.prisma.cities.create(args);
  }
  async updateCities(args: Prisma.CitiesUpdateArgs): Promise<PrismaCities> {
    return this.prisma.cities.update(args);
  }
  async deleteCities(args: Prisma.CitiesDeleteArgs): Promise<PrismaCities> {
    return this.prisma.cities.delete(args);
  }
}
